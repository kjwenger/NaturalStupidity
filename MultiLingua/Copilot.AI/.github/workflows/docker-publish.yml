name: Build and Push Docker Images

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

env:
  REGISTRY: docker.io
  IMAGE_NAME: kjwenger/multi-lingua

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./multi-lingua
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-compose:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create release docker-compose.yml
        run: |
          # Create a production-ready docker-compose.yml that uses the published image
          cat > docker-compose.release.yml << 'EOF'
          version: '3.8'

          services:
            libretranslate:
              image: libretranslate/libretranslate:latest
              ports:
                - "5432:5000"
              volumes:
                - lt-local:/home/libretranslate/.local
              networks:
                - multi-lingua-network
              environment:
                - LT_DISABLE_FILES_TRANSLATION=true
                - LT_DISABLE_WEB_UI=false
              healthcheck:
                test: ["CMD-SHELL", "curl -f http://localhost:5000/languages || exit 1"]
                interval: 30s
                timeout: 10s
                retries: 5

            multi-lingua:
              image: kjwenger/multi-lingua:latest
              ports:
                - "3456:3000"
              volumes:
                - ./data:/app/data
              networks:
                - multi-lingua-network
              environment:
                - NODE_ENV=production
                - LIBRETRANSLATE_URL=http://libretranslate:5000
              depends_on:
                libretranslate:
                  condition: service_healthy

          volumes:
            lt-local:
              external: true

          networks:
            multi-lingua-network:
              driver: bridge
          EOF

      - name: Upload docker-compose as artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-compose-release
          path: docker-compose.release.yml